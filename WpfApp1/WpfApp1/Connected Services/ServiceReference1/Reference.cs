//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblStock", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class tblStock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> addedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> quantity_remainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int stockIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stockNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> addedBy {
            get {
                return this.addedByField;
            }
            set {
                if ((this.addedByField.Equals(value) != true)) {
                    this.addedByField = value;
                    this.RaisePropertyChanged("addedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> quantity_remaining {
            get {
                return this.quantity_remainingField;
            }
            set {
                if ((this.quantity_remainingField.Equals(value) != true)) {
                    this.quantity_remainingField = value;
                    this.RaisePropertyChanged("quantity_remaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int stockId {
            get {
                return this.stockIdField;
            }
            set {
                if ((this.stockIdField.Equals(value) != true)) {
                    this.stockIdField = value;
                    this.RaisePropertyChanged("stockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stockName {
            get {
                return this.stockNameField;
            }
            set {
                if ((object.ReferenceEquals(this.stockNameField, value) != true)) {
                    this.stockNameField = value;
                    this.RaisePropertyChanged("stockName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService2")]
    public interface IService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/getStock", ReplyAction="http://tempuri.org/IService2/getStockResponse")]
        WpfApp1.ServiceReference1.tblStock[] getStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/getStock", ReplyAction="http://tempuri.org/IService2/getStockResponse")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.tblStock[]> getStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/getStockRowbyId", ReplyAction="http://tempuri.org/IService2/getStockRowbyIdResponse")]
        WpfApp1.ServiceReference1.tblStock getStockRowbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/getStockRowbyId", ReplyAction="http://tempuri.org/IService2/getStockRowbyIdResponse")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.tblStock> getStockRowbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/getStockNameById", ReplyAction="http://tempuri.org/IService2/getStockNameByIdResponse")]
        string getStockNameById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/getStockNameById", ReplyAction="http://tempuri.org/IService2/getStockNameByIdResponse")]
        System.Threading.Tasks.Task<string> getStockNameByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/setStock", ReplyAction="http://tempuri.org/IService2/setStockResponse")]
        void setStock(WpfApp1.ServiceReference1.tblStock x);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/setStock", ReplyAction="http://tempuri.org/IService2/setStockResponse")]
        System.Threading.Tasks.Task setStockAsync(WpfApp1.ServiceReference1.tblStock x);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/deleteStockById", ReplyAction="http://tempuri.org/IService2/deleteStockByIdResponse")]
        bool deleteStockById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/deleteStockById", ReplyAction="http://tempuri.org/IService2/deleteStockByIdResponse")]
        System.Threading.Tasks.Task<bool> deleteStockByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/updateStockById", ReplyAction="http://tempuri.org/IService2/updateStockByIdResponse")]
        bool updateStockById(WpfApp1.ServiceReference1.tblStock y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/updateStockById", ReplyAction="http://tempuri.org/IService2/updateStockByIdResponse")]
        System.Threading.Tasks.Task<bool> updateStockByIdAsync(WpfApp1.ServiceReference1.tblStock y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService2Channel : WpfApp1.ServiceReference1.IService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service2Client : System.ServiceModel.ClientBase<WpfApp1.ServiceReference1.IService2>, WpfApp1.ServiceReference1.IService2 {
        
        public Service2Client() {
        }
        
        public Service2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfApp1.ServiceReference1.tblStock[] getStock() {
            return base.Channel.getStock();
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.tblStock[]> getStockAsync() {
            return base.Channel.getStockAsync();
        }
        
        public WpfApp1.ServiceReference1.tblStock getStockRowbyId(int id) {
            return base.Channel.getStockRowbyId(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.tblStock> getStockRowbyIdAsync(int id) {
            return base.Channel.getStockRowbyIdAsync(id);
        }
        
        public string getStockNameById(int id) {
            return base.Channel.getStockNameById(id);
        }
        
        public System.Threading.Tasks.Task<string> getStockNameByIdAsync(int id) {
            return base.Channel.getStockNameByIdAsync(id);
        }
        
        public void setStock(WpfApp1.ServiceReference1.tblStock x) {
            base.Channel.setStock(x);
        }
        
        public System.Threading.Tasks.Task setStockAsync(WpfApp1.ServiceReference1.tblStock x) {
            return base.Channel.setStockAsync(x);
        }
        
        public bool deleteStockById(int id) {
            return base.Channel.deleteStockById(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteStockByIdAsync(int id) {
            return base.Channel.deleteStockByIdAsync(id);
        }
        
        public bool updateStockById(WpfApp1.ServiceReference1.tblStock y) {
            return base.Channel.updateStockById(y);
        }
        
        public System.Threading.Tasks.Task<bool> updateStockByIdAsync(WpfApp1.ServiceReference1.tblStock y) {
            return base.Channel.updateStockByIdAsync(y);
        }
    }
}
